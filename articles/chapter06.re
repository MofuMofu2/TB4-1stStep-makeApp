= レビューとマサカリと態度が悪いマン

2018年の1月に、こんな記事がfireしていました。

コードレビューにおけるレビュアー側のアンチパターン – ITアーキテクトブログ – Medium
（@<href>{https://medium.com/@laqiiz/コードレビューにおけるレビュアー側のアンチパターン-effdcc39da5}）

この記事に対するはてなブックマークのコメント欄が阿鼻叫喚な感じになっていて、また味が出ているエモポエムです。

記事を要約すると、

 * ひよこエンジニアの人が多くいる現場でコードレビューをすることになった。
 * コードはGit管理で、コードレビューはGitHub上で行う。
 * レビュー時に「これはよくないな」というアンチパターンが多発し、反省のために記事を書いた。
 ** 具体的な修正方法を出さないレビューコメントが多く、ひよこエンジニアが疲弊した。
 ** 修正を反映したら、それに紐づく修正が雪だるま式に出てきて終わりが見えなくなった。
 ** 「XXを読んで勉強してよ」と、修正内容を自分で察してください感を出していた。
 ** そもそもレビューされていないものもmasterブランチにMergeしてしまっていた。

と、まあよくあるコードレビューのアンチパターン集に関するポエムなのでした。

なぜfireしたのか？それは、コードレビューはする側（レビュアー）・される側（レビュイー）共に嫌な気持ちになることが多く、
これ系の記事自体が燃焼要素満載だからです。

ブログをちょっと書いただけでfireするのです。現実は？もっと嫌な気持ちになることも多いです。
なので、なるべく先人の知恵をエモポエムから吸収して、少しでも気持ちが良いレビューフローをやっていきましょう。
合わせて、マサカリ・態度が悪いマンに関するポエムを紹介します。この辺り、心にトゲパワワが溜まる原因となりますからね。
サバイバルするには重要な知見になると思っています。

== なぜレビュー論争がおこるのか？

これには原因がいくつかあると思うのですが、レビュアーとレビュイーの技術スキルが異なるんだよ、という前提が
頭から転げ落ちているときに不幸になる率が高いのでは？と予想しています。
これに拍車をかけるのが、「間違っていることは全部指摘して直してもらうべきだ」という考え方です。
仕事ならまだしも、個人で書いているブログでもこの問題は頻発します。

=== レビューを受ける側の気持ち

指摘を受けると、ぐさっときて落ち込んでしまいますよね。もっと優しくしてほしい！という側の主張です。

 * エンジニアから飛んでくるマサカリを受け止める心得
 （@<href>{https://www.slideshare.net/re_3_19/ss-34793007}）
 * 不寛容社会とエンジニアの「正しさハラスメント」
 （@<href>{http://emokuaritai.hatenablog.jp/entry/2016/12/28/115401}）


=== レビューをする側の気持ち

間違っているんだから直すべきだし、ブログは永遠に残り続けるのでなおさら修正するべきだ、とする側の主張です。

 * ITエンジニアが誤った情報にツッコミを入れるのは「正しさハラスメント」ではない
 （@<href>{http://blog.jnito.com/entry/2016/12/29/102416}）
 * 「正しさ」ハラスメントの元記事を読んで、マサカリ大好き人間が思ったこと
 （@<href>{https://qiita.com/emadurandal/items/00119bb88fd213c5bf25}）

== 優しい世界を目指すために

=== コードレビューを受けるのがつらくなったときは

@<href>{http://c5meru.hatenablog.jp/entry/2017/11/10/235107}


=== 「プログラマの三大美徳」と「HRT」を使い分ける - 「コードを憎んで人を憎まず」

@<href>{http://t-and-p.hatenablog.com/entry/2017/01/03/「プログラマの三大美徳」と「HRT」を使い分ける_-_}


レビューが優しい世界はDroidKaigiの公式アプリを開発するプロジェクト（@<href>{https://github.com/DroidKaigi/conference-app-2018/issues}）で
閲覧することができます。知らない人同士が楽しく開発しており、揉め事的なものも見当たりません。こんなプロジェクトを目指してやっていきたいものです。
