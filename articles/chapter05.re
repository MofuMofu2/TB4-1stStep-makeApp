= コピペと責任と習慣と

ひよこなエンジニアの人あるあるなシチュエーションとして、「よくわかんないからGoogle検索して出てきたコードをはりつけよ！」と
いうものがあります。

ひよこを脱却したエンジニアの人からすると「なにしとるか！」という気持ちですが、ひよこの人には
なぜコピー＆ペーストがよろしくないことなのか理解することができません。

コピペをするひよこなエンジニアの人にヘイトが溜まったエンジニアは、エモポエムをインターネットに放流します。
コピペしたくなる気持ちはわかりますが、ひよこのお世話をする側の意見を参考にしてみてはいかがでしょうか。

あと、「専門用語で説明されてもわかりませ〜ん、優しい例にしてくださ〜い」というのもひよこなエンジニアの人が思うことです。
が、これも色々と論争・問題があるので、その辺のエモポエムも読んでみましょう。

== コピペプログラミングがダメな理由

@<href>{http://scrap.php.xdomain.jp/copy_programming_issue/}

まず始めに、@<code>{コピペ}がどんな状態を指すのかを確認します。
この記事に記載されているように、コピー＆ペーストでプログラムを貼り付けてその場をしのぐ状態です。
ひよこエンジニアの人にコピペをするな！という場合

//quote{
	初心者に多いのですが、処理を完全にコピペしてしまい、どう処理を行っているのかを理解していない。
//}

状態のことが多いかと思います。

コピペをしているかは、エラーが出てきたときの対処方法である程度わかります。
これはもふちゃんの完全なる体感ですが、次のような症状が見られる場合、大抵はコピペマンです。

 * 自分のやったことを自分の言葉で説明できない
 * 条件が変わると手が止まってしまう
 * この意味は何？と聞かれると固まってしまう
 * エラーが出てきたときはコピペ元が間違っているのでは？と疑う


== 量産型プログラマを撲滅したい

@<href>{https://medium.com/@kuranuki/量産型プログラマを撲滅したい-570302a5c243}

別にコピペでもよくない？とおもったひよこなあなた。この記事を一度読んで考え直して欲しいと思います。

//quote{
	プログラマの生産性の差は、出来る人と出来ない人で10倍とも100倍とも言われる。そんな馬鹿な、と思われるかもしれないが、事実だ。
	むしろ、一緒に働かせると、出来るプログラマが、下手に作られたプログラムの修正をしなければいけなくて、全体の生産性を落とすことになる。
	つまり、出来ないプログラマはチームで働くと、生産性をマイナスにするのだ。厳しいことを言えば、いない方がマシなのである。
//}

厳しいですが、これが現実です。コピペで不具合を撒き散らされると、修正をするコストの方が何倍もかかるのです。
コピペマンのせいで仕事が雪だるま式に増えるのです。

だから、最低限、自分の成果物に対して責任を持って欲しいです。正しい・正しくないではなく、自分の成果物の内容が説明できない＝責任を取っていない
と見なされます。とてもかっこ悪いですし、「あ、この人やる気ないのか」と思われますよ。

最終的に行き着く先はこの（@<href>{http://uxlayman.hatenablog.com/entry/2017/02/12/low}）に書いてあります。
こんな風に思われてもいいのか？君は？もふちゃんは嫌です。

== 新人プログラマのうちに身に付けたい習慣、考え方（この半年で学んだことと反省）

@<href>{https://qiita.com/Sekky0905/items/095b45c46a80e933509c}

じゃあどうしたらかっこ悪くないエンジニアになれるんだ！という人もいるかもしれません。
そんなときはこの記事を読むとよいでしょう。

//quote{
	「なぜ、その技術を使用するのか」「なぜ、そのようなコードになったのか」
	など、必ず「なぜそうなるのか」、「どのような思考過程を経てそうなったのか」を説明できるようになりましょう。
	これは、つまりコードのコピペや表面上の理解でなく、根底から理解する必要があるということです。
	心の中で常に「なぜ?」を繰り返しましょう。深い理解のためには、多少時間をかけても良いと思います。
	この「なぜ」を説明できないと先輩方に論破されて泣く羽目になります。
//}

この人も自分の成果物に対する責任を問われていますよね。だからこそ、コピペはいかんのですよ。

== ペアプログラミングして気がついた新人プログラマの成長を阻害する悪習

@<href>{https://qiita.com/hirokidaichi/items/27c757d92b6915e8ecf7}

最近ひよこなエンジニアの人のそばにいることが多いので、確かにな！と言う気持ちになって記事を添えてこの章を終わろうと思います。

//quote{
	常々、プログラミングの力を決めているものはなにかということについて気になっていた。
	学習効率が良い人も入れば、悪い人もいる。
	これらをセンスと言って切り捨ててしまうのは簡単だが、
	頭の善し悪しとは別にこれらを決める要素があるのではないかと考えていた。
//}

もふちゃんもこの意見に同感ですし、ひよこな人が伸びないのは目の前に良い習慣を持っているパイセンがいない＆
なんでも聞けるパイセンがいない、っていうのが大きな要素を占めていると思います。

本当は全ての職場・全てのパイセンがひよこな人の手本となるようなものであるべきでしょう。
ただし、現実には職場とパイセンは運の要素が強すぎます。職場（パイセン）ガチャです。

だから、エモポエムを通じてエンジニアとしての良い習慣・悪い習慣を知ることが、
ひよこエンジニアの人がサバイバルするのに役にたつ！と思うもふちゃんでありました。
